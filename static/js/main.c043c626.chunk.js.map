{"version":3,"sources":["component/Main/CardList/Card/Card.module.scss","App.module.scss","component/Main/CardList/CardList.module.scss","component/Navbar/Navbar.module.scss","component/Navbar/SearchBox/SearchBox.module.scss","component/Navbar/FiltersList/FiltersList.module.scss","component/Navbar/FiltersList/FilterItem/FilterItem.module.scss","component/Main/CardList/Card/index.js","component/Main/CardList/Card/Card.jsx","component/Main/CardList/index.js","component/Main/CardList/CardList.jsx","component/Main/index.js","component/Main/Main.jsx","component/Navbar/SearchBox/index.js","component/Navbar/SearchBox/SearchBox.jsx","component/Navbar/FiltersList/FilterItem/index.js","component/Navbar/FiltersList/FilterItem/FilterItem.jsx","component/Navbar/FiltersList/index.js","component/Navbar/FiltersList/FiltersList.jsx","component/Navbar/index.js","component/Navbar/Navbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Card","state","this","props","data","name","description","tagline","image_url","abv","ph","first_brewed","ingredients","className","styles","src","alt","malt","map","item","join","hops","Component","CardList","beers","filterCheckbox","filterProp","filterParam","filterBySearch","toUpperCase","includes","toString","filter","beer","highAlcoholOnly","classicRangeOnly","parseInt","split","pop","highAcidityOnly","searchTerm","key","id","fetch","then","response","json","setState","catch","error","console","log","Main","main","SearchBox","type","onChange","handleSearch","htmlFor","icon","faSearch","FilterItem","value","text","onClick","FiltersList","filterABV","filterClassic","filterAcidic","Navbar","navBar","App","event","target","app","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c043c626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2KVzT\",\"tagline\":\"Card_tagline__3YvO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardList\":\"CardList_CardList__wsTHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Navbar_navBar__2Jmdj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBox\":\"SearchBox_SearchBox__3H4dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FiltersList\":\"FiltersList_FiltersList__17aOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterItem\":\"FilterItem_FilterItem__E-kfN\"};","import Card from './Card';\nexport default Card;","import React, { Component } from 'react';\nimport styles from './Card.module.scss';\n\nclass Card extends Component {\n    state = {  }\n    render() { \n        const { name, description, tagline, image_url, abv, ph, first_brewed, ingredients } = this.props.data;\n        \n        return (\n        <div className={styles.Card}>\n            <img src={image_url} alt={tagline}/>\n            <h2>{name}</h2>\n            <p className={styles.tagline}>{tagline}</p>\n            <p>ABV: {abv}% | pH: {ph} | Since: {first_brewed}</p>\n            <p>{description}</p>\n            <p>Ingredients: malts ({ingredients.malt.map(item => item.name).join(', ')}), hops({ingredients.hops.map(item => item.name).join(', ')}), yeast</p>   \n        </div>\n         );\n    }\n}\n \nexport default Card;","import CardList from './CardList';\nexport default CardList;","import React, { Component } from 'react';\nimport styles from './CardList.module.scss';\nimport Card from './Card'\n\nclass CardList extends Component {\n    state = {\n        beers: [],\n    }\n\n    componentDidMount() {\n        fetch('https://api.punkapi.com/v2/beers?page=1&per_page=80')\n        .then(response => response.json())\n        .then(response => this.setState({beers: response}))\n        .catch(error => console.log(error))\n    }\n    \n    filterCheckbox = (filterProp, filterParam) => {\n       if (filterProp) {\n            return filterParam;\n        } else {\n            return true;\n        }\n    }\n\n    filterBySearch = (filterProp, filterParam) => {\n        return filterParam.name.toUpperCase().includes(filterProp)\n        || filterParam.tagline.toUpperCase().includes(filterProp)\n        || filterParam.abv.toString().includes(filterProp)\n        || filterParam.description.toUpperCase().includes(filterProp)\n    }\n\n    filter = () => {\n        return this.state.beers\n            .filter((beer) => {return (\n                this.filterCheckbox(this.props.highAlcoholOnly, beer.abv > 6)\n                && this.filterCheckbox(this.props.classicRangeOnly, (parseInt(beer.first_brewed.split('/').pop()) < 2010) )\n                && this.filterCheckbox(this.props.highAcidityOnly, beer.ph < 4)\n                && this.filterBySearch(this.props.searchTerm.toUpperCase(), beer)\n                )})\n            .map((beer) => <Card data={beer} key={beer.id} />)\n    }    \n\n    render() { \n        return (\n            <section className={styles.CardList}>\n                {this.filter()}\n            </section>\n          );\n    }\n}\n \nexport default CardList;\n","import Main from './Main';\nexport default Main;","import React, { Component } from 'react';\nimport styles from './Main.module.scss';\nimport CardList from './CardList'\n\nclass Main extends Component {\n    state = {  }\n    render() { \n        const {highAlcoholOnly, classicRangeOnly, highAcidityOnly, searchTerm } = this.props;\n        return (<CardList className={styles.main} highAlcoholOnly={highAlcoholOnly} classicRangeOnly={classicRangeOnly} highAcidityOnly={highAcidityOnly} searchTerm={searchTerm} />);\n    }\n}\n \nexport default Main;","import SearchBox from './SearchBox';\nexport default SearchBox;","import React, { Component } from 'react';\nimport styles from './SearchBox.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\n\nclass SearchBox extends Component {\n    render() { \n        return (\n        <section className={styles.SearchBox}>\n           <div>\n                <input type='text' onChange={this.props.handleSearch} id='search'/>\n                <label htmlFor=\"search\">\n                    <FontAwesomeIcon icon={faSearch}/>\n                </label>\n           </div>\n            <p>Search by name, tagline, description or ABV</p>\n        </section>);\n    }\n}\n \nexport default SearchBox;","import FilterItem from './FilterItem';\nexport default FilterItem;","import React, { Component } from 'react';\nimport styles from './FilterItem.module.scss';\n\nclass FilterItem extends Component {\n    state = {  }\n    render() { \n        return (\n        <div className={styles.FilterItem}>\n          <label htmlFor={this.props.value}>{this.props.text}</label>\n          <input type=\"checkbox\" value={this.props.value} id={this.props.value} onClick={this.props.onClick}/>\n        </div>);\n    }\n}\n \nexport default FilterItem;","import FiltersList from './FiltersList';\nexport default FiltersList;","import React, { Component } from 'react';\nimport styles from './FiltersList.module.scss';\nimport FilterItem from './FilterItem';\n\nclass FiltersList extends Component {\n    state = {  }\n    render() { \n        return (\n            <div className={styles.FiltersList}>\n            <p>Show only:</p>\n            <FilterItem text={'ABV over 6%'} value={'highABV'} onClick={this.props.filterABV}/>\n            <FilterItem text={'Classic Range'} value={'classicRange'} onClick={this.props.filterClassic}/>\n            <FilterItem text={'Acidic (pH < 4)'} value={'acidic'} onClick={this.props.filterAcidic}/>\n        </div>);\n    }\n}\n \nexport default FiltersList;","import Navbar from './Navbar';\nexport default Navbar;","import React, { Component } from 'react';\nimport styles from './Navbar.module.scss';\nimport SearchBox from './SearchBox';\nimport FiltersList from './FiltersList';\n\n\nclass Navbar extends Component {\n  \n    render() { \n        const { handleSearch, filterABV, filterClassic, filterAcidic } = this.props;\n\n        return (\n            <>\n                <section className={styles.navBar}>\n                    <h1>Beer Browser with Punk API</h1>\n                <SearchBox handleSearch={handleSearch}/>\n                <FiltersList filterABV={filterABV} filterClassic={filterClassic} filterAcidic={filterAcidic}/>\n                </section>\n            </>\n    );\n    }\n}\n \nexport default Navbar;","import React, { Component } from 'react';\nimport styles from './App.module.scss';\nimport Main from './component/Main';\nimport Navbar from './component/Navbar';\n\nexport default class App extends Component {\n\n  // Can pass status into state as a single object containing all the filters\n  state = {\n    searchTerm: '',\n    highAlcoholOnly: false,\n    classicRangeOnly: false,\n    highAcidityOnly: false,\n  }\n\n  handleSearch = (event) => {\n    this.setState({\n      searchTerm: event.target.value,\n    })\n  }\n\n  filterClassic = () => {\n    this.setState({\n      classicRangeOnly: !this.state.classicRangeOnly,\n    })\n  }\n\n  filterABV = () => {\n    this.setState({\n      highAlcoholOnly: !this.state.highAlcoholOnly,\n    })\n  }\n\n  filterAcidic = () => {\n    this.setState({\n      highAcidityOnly: !this.state.highAcidityOnly,\n    })\n  }\n  \n  render() {\n    const {highAlcoholOnly, classicRangeOnly, highAcidityOnly, searchTerm } = this.state;\n    return (\n      <main className={styles.app}>\n        <Navbar handleSearch={this.handleSearch} filterABV={this.filterABV} filterClassic={this.filterClassic} filterAcidic={this.filterAcidic} />\n        <Main highAlcoholOnly={highAlcoholOnly} classicRangeOnly={classicRangeOnly} highAcidityOnly={highAcidityOnly} searchTerm={searchTerm} />\n      </main>\n    )\n    ;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}